swagger: "2.0"
info:
  description: Global administration API. Manages admins, tenants and global settings. Base path is /api/v1/global/.
  version: 1.0.0
  title: Global API
host: your-host.domain
basePath: /api/v1/global
schemes:
  - https
tags:
  - name: admins
    description: Manages admins
paths:
  /admins:
    get:
      tags:
        - admins
      summary: Gets admins
      description: Returns a list containing all admins
      produces:
        - application/json
      responses:
        200:
          description: A list of admins
          schema:
            $ref: "#/definitions/Admins"
        500:
          $ref: "#/responses/Standard500Error"
    post:
      tags:
        - admins
      summary: Create admin
      description: Creates an admin account and returns location in response head
      consumes:
        - application/json
      parameters:
        - name: admin
          in: body
          description: The admin to create
          required: true
          schema:
            $ref: "#/definitions/AdminPost"
      responses:
        201:
          $ref: "#/responses/Standard201Response"
        400:
          $ref: "#/responses/Standard400Error"
        500:
          $ref: "#/responses/Standard500Error"
  /admins/{id}:
    parameters:
      - $ref: "#/parameters/id"
    get:
      tags:
        - admins
      summary: Get admin by ID
      description: Returns a specific admin entry
      produces:
        - application/json
      responses:
        200:
          description: Specific admin entry
          schema:
            $ref: "#/definitions/Admin"
        400:
          $ref: "#/responses/Standard400Error"
        404:
          $ref: "#/responses/Standard404Error"
        500:
          $ref: "#/responses/Standard500Error"
    post:
      tags:
        - admins
      summary: Update admin by ID
      description: Updates an admin account
      consumes:
        - application/json
      parameters:
        - name: admin
          in: body
          description: The admin configuration
          required: true
          schema:
            $ref: "#/definitions/AdminBase"
      responses:
        204:
          $ref: "#/responses/Standard204Response"
        400:
          $ref: "#/responses/Standard400Error"
        404:
          $ref: "#/responses/Standard404Error"
        500:
          $ref: "#/responses/Standard500Error"
    delete:
      tags:
        - admins
      summary: Delete admin by ID
      description: Deletes a specific admin by ID
      responses:
        204:
          $ref: "#/responses/Standard204Response"
        400:
          $ref: "#/responses/Standard400Error"
        404:
          $ref: "#/responses/Standard404Error"
        500:
          $ref: "#/responses/Standard500Error"
  /admins/{id}/password:
    parameters:
      - $ref: "#/parameters/id"
    put:
      tags:
        - admins
      summary: "Sets an admin's password"
      description: ""
      consumes:
        - application/json
      parameters:
        - name: password
          in: body
          description: The password configuration
          required: true
          schema:
            $ref: "#/definitions/Password"
      responses:
        204:
          $ref: "#/responses/Standard204Response"
        400:
          $ref: "#/responses/Standard400Error"
        404:
          $ref: "#/responses/Standard404Error"
        500:
          $ref: "#/responses/Standard500Error"
definitions:
  Password:
    type: object
    required:
      - password
    properties:
      password:
        type: string
        format: password
    example:
      pasword: Secure1
  AdminBase:
    discriminator: adminBase
    required:
      - name
      - email
    properties:
      active:
        type: boolean
      name:
        type: string
        pattern: "[a-zA-Z0-9]{8,64}"
        minLength: 8
        maxLength: 64
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
    example:
      active: true
      name: admin
      firstName: Jon
      lastName: Doe
      email: jon.doe@example.mail
  AdminPost:
    allOf:
      - $ref: "#/definitions/AdminBase"
    properties:
      password:
        type: string
        format: password
    example:
      pasword: Secure1
  Admin:
    allOf:
      - $ref: "#/definitions/AdminBase"
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      created_at:
        type: string
        format: date-time
        readOnly: true
      updated_at:
        type: string
        format: date-time
        readOnly: true
    example:
      id: 1
      created_at: "2017-01-01 00:00:00"
      updated_at: "2017-01-01 00:00:00"
  Admins:
    type: array
    items:
      $ref: "#/definitions/Admin"
  Error:
    properties:
      code:
        type: integer
        minimum: 100
        maximum: 600
      message:
        type: string
    example:
      code: 123
      message: "Something bad happened"
responses:
  Standard201Response:
    description: Created
    headers:
      Location:
        description: Location of created object
        type: string
  Standard204Response:
    description: No content
  Standard400Error:
    description: Bad request
    schema:
      $ref: "#/definitions/Error"
  Standard404Error:
    description: Entry not found
  Standard500Error:
    description: An unexpected internal server error occured
    schema:
      $ref: "#/definitions/Error"
parameters:
  id:
    name: id
    in: path
    required: true
    description: Unique identifier
    type: integer
